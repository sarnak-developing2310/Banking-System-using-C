#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_CUSTOMERS 100
#define FILENAME "accounts.csv"

struct account {
   int account_number;
   char name[30];
   float balance;
};

void save_accounts(struct account customers[], int count) {
   FILE *file = fopen(FILENAME, "w");
   if (file == NULL) 
   {
      printf("Error opening file.\n");
      return;
   }
      
   for (int i = 0; i < count; i++) {
   	  
      fprintf(file, "%d,%s,%.2f\n", customers[i].account_number, customers[i].name, customers[i].balance);
   }
   
   fclose(file);
   printf("Accounts saved successfully.\n\n");
}

void load_accounts(struct account customers[], int *count) {
   FILE *file = fopen(FILENAME, "r");
   if (file == NULL) {
      printf("Error opening file.\n");
      return;
   }
   
   *count = 0;
   while (fscanf(file, "%d,%[^,],%f\n", &customers[*count].account_number, customers[*count].name, &customers[*count].balance) == 3) {
      (*count)++;
   }
   
   fclose(file);
}

void create_account(struct account customers[], int *count) {
   if (*count >= MAX_CUSTOMERS) {
      printf("Maximum number of customers reached.\n\n");
      return;
   }
   
   printf("Enter account number: ");
   scanf("%d", &customers[*count].account_number);
   printf("Enter name: ");
   scanf("%s", customers[*count].name);
   printf("Enter initial balance: ");
   scanf("%f", &customers[*count].balance);
   
   (*count)++;
   printf("Account created successfully.\n\n");
   save_accounts(customers, *count);
}

void deposit(struct account customers[], int count) {
   int account_number;
   float amount;
   printf("Enter account number: ");
   scanf("%d", &account_number);
   
   for (int i = 0; i < count; i++) {
      if (customers[i].account_number == account_number) {
         printf("Enter deposit amount: ");
         scanf("%f", &amount);
         customers[i].balance += amount;
         printf("Deposit successful. New balance is %.2f\n\n", customers[i].balance);
         save_accounts(customers, count);
         return;
      }
   }
   
   printf("Account not found.\n\n");
}

void withdraw(struct account customers[], int count) {
   int account_number;
   float amount;
   printf("Enter account number: ");
   scanf("%d", &account_number);
   
   for (int i = 0; i < count; i++) {
      if (customers[i].account_number == account_number) {
         printf("Enter withdrawal amount: ");
         scanf("%f", &amount);
         if (amount > customers[i].balance) {
            printf("Insufficient balance.\n\n");
         } else {
            customers[i].balance -= amount;
            printf("Withdrawal successful. New balance is %.2f\n\n", customers[i].balance);
            save_accounts(customers, count);
         }
         return;
      }
   }
   
   printf("Account not found.\n\n");
}

void view_balance(struct account customers[], int count) {
   int account_number;
   printf("Enter account number: ");
   scanf("%d", &account_number);
   
   for (int i = 0; i < count; i++)
   {
if (customers[i].account_number == account_number) {
printf("Account number: %d\n", customers[i].account_number);
printf("Name: %s\n", customers[i].name);
printf("Balance: %.2f\n\n", customers[i].balance);
return;
}
}

printf("Account not found.\n\n");
}

int main() {
int choice;
int count = 0;
struct account customers[MAX_CUSTOMERS];

load_accounts(customers, &count);

while (1) {
printf("1. Create account\n");
printf("2. Deposit\n");
printf("3. Withdraw\n");
printf("4. View balance\n");
printf("5. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);



  switch(choice) {
     case 1:
        create_account(customers, &count);
        break;
     case 2:
        deposit(customers, count);
        break;
     case 3:
        withdraw(customers, count);
        break;
     case 4:
        view_balance(customers, count);
        break;
     case 5:
        return 0;
     default:
        printf("Invalid choice.\n\n");
  }
}
}
